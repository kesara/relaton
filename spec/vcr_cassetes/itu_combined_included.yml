---
http_interactions:
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/Search
    body:
      encoding: UTF-8
      string: '{"json":"{\"Input\":\"ITU-T G.989.2\",\"Start\":0,\"Rows\":10,\"SortBy\":\"RELEVANCE\",\"ExactPhrase\":false,\"CollectionName\":\"General\",\"CollectionGroup\":\"Recommendations\",\"Sector\":\"t\",\"Criterias\":[{\"Name\":\"Search
        in\",\"Criterias\":[{\"Selected\":false,\"Value\":\"\",\"Label\":\"Name\",\"Target\":\"\\\\/name_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"Short
        description\",\"Target\":\"\\\\/short_description_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"File
        content\",\"Target\":\"\\\\/file\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0}],\"ShowCheckbox\":true,\"Selected\":false}],\"Topics\":\"\",\"ClientData\":{},\"Language\":\"en\",\"SearchType\":\"All\"}"}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '18486'
      Date:
      - Mon, 01 Feb 2021 13:19:36 GMT
      Content-Type:
      - application/json; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Set-Cookie:
      - GSCookie=QueryId=&CookieId=14aSD9Fp095dNX/w+v+XMhZZ9mgzbjJwDjtaU4Gp4tGikRPblcYXtXSVDhIcdv1PFzG8U60RCMOhFGiTh8u8Zg==;
        domain=www.itu.int; expires=Wed, 01-Feb-2023 13:19:36 GMT; path=/
      - GSCookie=QueryId=3639697&CookieId=14aSD9Fp095dNX/w+v+XMhZZ9mgzbjJwDjtaU4Gp4tGikRPblcYXtXSVDhIcdv1PFzG8U60RCMOhFGiTh8u8Zg==;
        domain=www.itu.int; expires=Wed, 01-Feb-2023 13:19:36 GMT; path=/
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:36 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/13745-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Mon, 01 Feb 2021 13:19:36 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/13745-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/13745-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:37 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/13745-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Mon, 01 Feb 2021 13:19:37 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/13745-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:37 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/13745-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Mon, 01 Feb 2021 13:19:38 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13745&lang=en
      Expires:
      - Tue, 02 Feb 2021 13:19:38 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13745&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13745&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:37 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13745
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Mon, 01 Feb 2021 13:19:38 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13745&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13745&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:38 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13745
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Mon, 01 Feb 2021 13:19:40 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:40 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/g/T-REC-G.989.2-202010-I!Amd1!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Mon, 01 Feb 2021 13:19:40 GMT
      Content-Type:
      - text/html
      Etag:
      - '"5fadcd95ebe7d61:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 11 Jan 2021 07:30:07 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<meta name=Generator content=\"Microsoft Word 15
        (filtered)\">\r\n<title>Summary - ITU-T Rec. G.989.2 Amendment&nbsp;1 (10/2020)\r\n40-Gigabit-capable
        passive optical networks 2 (NG-PON2): Physical media\r\ndependent (PMD) layer
        specification Amendment 1 </title>\r\n<style>\r\n<!--\r\n /* Font Definitions
        */\r\n @font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2 4 5
        3 5 4 6 3 2 4;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal,
        div.MsoNormal\r\n\t{margin-top:6.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nh1\r\n\t{mso-style-link:\"Heading 1 Char\";\r\n\tmargin-top:12.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:16.0pt;\r\n\tfont-family:\"Calibri
        Light\",sans-serif;\r\n\tcolor:#2F5496;\r\n\tfont-weight:normal;}\r\nh3\r\n\t{mso-style-link:\"Heading
        3 Char\";\r\n\tmargin-top:8.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:39.7pt;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-indent:-39.7pt;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\np.MsoHeader, li.MsoHeader, div.MsoHeader\r\n\t{mso-style-link:\"Header
        Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:center;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:9.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nspan.Heading3Char\r\n\t{mso-style-name:\"Heading 3
        Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Times New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.HeaderChar\r\n\t{mso-style-name:\"Header
        Char\";\r\n\tmso-style-link:Header;\r\n\tfont-family:\"Times New Roman\",serif;}\r\np.FooterQP,
        li.FooterQP, div.FooterQP\r\n\t{mso-style-name:Footer_QP;\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading
        1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Calibri Light\",sans-serif;\r\n\tcolor:#2F5496;}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",sans-serif;}\r\n.MsoPapDefault\r\n\t{margin-bottom:8.0pt;\r\n\tline-height:107%;}\r\n@page
        WordSection1\r\n\t{size:21.0cm 841.7pt;\r\n\tmargin:54.45pt 54.45pt 54.45pt
        54.45pt;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n<body
        lang=EN-GB>\r\n\r\n<div class=WordSection1>\r\n\r\n<table class=MsoNormalTable
        border=0 cellspacing=0 cellpadding=0 width=\"102%\"\r\n style='border-collapse:collapse'>\r\n
        <tr>\r\n  <td width=\"100%\" valign=top style='width:100.0%;padding:0cm 5.4pt
        0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a name=isume>Summary</a></h3>\r\n
        \ <p class=MsoNormal><span style='font-size:11.0pt'>Recommendation ITU-T\r\n
        \ G.989.2 specifies the physical media dependent (PMD) layer requirements
        for a\r\n  passive optical network (PON) system with</span><span style='font-size:11.0pt'>\r\n
        \ a nominal aggregate capacity of 40 Gbit/s in the downstream direction and
        10\r\n  Gbit/s in the upstream direction, hereinafter referred to as NG-PON2</span><span\r\n
        \ style='font-size:11.0pt'>. NG-PON2 is a flexible optical fibre access network\r\n
        \ capable of supporting the bandwidth requirements of mobile backhaul, business\r\n
        \ and residential services. </span><span style='font-size:11.0pt'>Furthermore,\r\n
        \ this Recommendation describes optional configurations, to extend beyond
        this\r\n  nominal capacity, as the ITU-T G.989 series of Recommendations allows
        for\r\n  multiple upstream and downstream line rates.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>The NG-PON2 wavelength plan\r\n  is defined to enable
        the coexistence through wavelength overlay with legacy\r\n  PON systems (see
        ITU-T G.989.1). The transmission convergence (TC) layer is\r\n  based on Recommendation
        ITU-T G.987.3, with unique modifications for NG-PON2\r\n  captured in Recommendation
        ITU-T G.989.3. The optical network unit (ONU)\r\n  management and control
        interface (OMCI) specifications are described in\r\n  Recommendation ITU-T
        G.988 for NG&#8209;PON2 extensions.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>This Recommendation\r\n  specifies the characteristics
        of hybrid time and wavelength division\r\n  multiplexing (TWDM) channels,
        referred to as TWDM PON. The characteristics of\r\n  optional, tunable point-to-point
        wavelength overlay channels are also\r\n  described, referred to as point-to-point
        wavelength division multiplexing\r\n  (PtP WDM) PON.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>The TWDM PON described in\r\n  this Recommendation
        represents a further development from the systems\r\n  described in the ITU-T
        G.984 and ITU-T G.987 series of Recommendations. To\r\n  the greatest extent
        possible, this Recommendation retains the requirements of\r\n  ITU-T G.984.1
        and ITU-T G.987.1 to ensure maximal reuse of existing\r\n  technology and
        compatibility with deployed optical access systems and optical\r\n  fibre
        infrastructure.</span></p>\r\n  <p class=MsoNormal><span style='font-size:11.0pt'>Edition
        2.0 continues the\r\n  maintenance and evolution of physical media dependent
        (PMD) layer\r\n  specification.</span></p>\r\n  <p class=MsoNormal><span style='font-size:11.0pt'>Corrigendum
        1 revises Table\r\n  10-1 on TWDM PON downstream (ONU receive) X/S parameters.</span></p>\r\n
        \ <p class=MsoNormal><span style='font-size:11.0pt'>Amendment 1 updates Annex
        D\r\n  on power spectral density (PSD) values, to reflect the more recent
        changes in\r\n  the PMD spec.</span></p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p
        class=MsoNormal>&nbsp;</p>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:40 GMT
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/Search
    body:
      encoding: UTF-8
      string: '{"json":"{\"Input\":\"ITU-T G.989.2/Amd 1\",\"Start\":0,\"Rows\":10,\"SortBy\":\"RELEVANCE\",\"ExactPhrase\":false,\"CollectionName\":\"General\",\"CollectionGroup\":\"Recommendations\",\"Sector\":\"t\",\"Criterias\":[{\"Name\":\"Search
        in\",\"Criterias\":[{\"Selected\":false,\"Value\":\"\",\"Label\":\"Name\",\"Target\":\"\\\\/name_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"Short
        description\",\"Target\":\"\\\\/short_description_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"File
        content\",\"Target\":\"\\\\/file\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0}],\"ShowCheckbox\":true,\"Selected\":false}],\"Topics\":\"\",\"ClientData\":{},\"Language\":\"en\",\"SearchType\":\"All\"}"}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '18038'
      Date:
      - Mon, 01 Feb 2021 13:19:42 GMT
      Content-Type:
      - application/json; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Set-Cookie:
      - GSCookie=QueryId=&CookieId=+RtCv/3AdlLOIMPGAiZm+Vcn2TuIFPhHs1hx3zB4AIPNL7reOWKYZVDOhiz/bivAA8oopWbDwsWv5QK9p5Jv1A==;
        domain=www.itu.int; expires=Wed, 01-Feb-2023 13:19:41 GMT; path=/
      - GSCookie=QueryId=3639699&CookieId=+RtCv/3AdlLOIMPGAiZm+Vcn2TuIFPhHs1hx3zB4AIPNL7reOWKYZVDOhiz/bivAA8oopWbDwsWv5QK9p5Jv1A==;
        domain=www.itu.int; expires=Wed, 01-Feb-2023 13:19:42 GMT; path=/
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: '{"results":[{"Identifier":"11.1002/1000/14492-en","Title":"ITU-T G.989.2
        (2019) Amd. 1 (10/2020): 40-Gigabit-capable passive optical networks 2 (NG-PON2):
        Physical media dependent (PMD) layer specification - Amendment 1","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14492-en\u0026position=10\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"January, 2021"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 1 (10/2020)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14492-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-202010-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14492-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-202010-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/14492-en","Date":"January,
        2021","Url":null,"Name":"ITU-T G.989.2 (2019) Amd. 1 (10/2020)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12556-en","Title":"ITU-T
        G.989.2 (2014) Amd. 1 (04/2016)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12556-en\u0026position=9\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"October, 2016"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 1 (04/2016)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12556-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201604-S!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12556-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201604-S!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/12556-en","Date":"October,
        2016","Url":null,"Name":"ITU-T G.989.2 (2014) Amd. 1 (04/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13292-en","Title":"ITU-T
        G.989.2 (2014) Amd. 2 (08/2017)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13292-en\u0026position=8\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"October, 2017"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR......N STANDARDIZATION SECTOR OF ITU Amendment 2 (08/2017)     SERIES
        G: TRANSMISSION SYSTEMS AND MEDIA, D...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13292-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201708-S!Amd2!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13292-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201708-S!Amd2!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/13292-en","Date":"October,
        2017","Url":null,"Name":"ITU-T G.989.2 (2014) Amd. 2 (08/2017)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13745-en","Title":"ITU-T
        G.989.2 (02/2019): 40-Gigabit-capable passive optical networks 2 (NG-PON2):
        Physical media dependent (PMD) layer specification","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en\u0026position=7\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2019"}],"ExtractFileContent":"...  T e l e c o m m u n
        i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR......COMMUNICATION STANDARDIZATION SECTOR OF ITU (02/2019)     SERIES
        G: TRANSMISSION SYSTEMS AND MEDIA, D...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201902-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201902-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"},{"Id":"3","Type":"epu","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en%3Flocatt%3Did%3A3%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201902-I!!EPB-E\u0026type=items","Icon":"epub-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/13745-en","Date":"May,
        2019","Url":null,"Name":"ITU-T G.989.2 (02/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14023-en","Title":"ITU-T
        G.9803 (2018) Amd. 1 (08/2019)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14023-en\u0026position=6\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"November, 2019"}],"ExtractFileContent":"...  T e l e c o m
        m u n i c a t i o n  U n i o n    ITU-T  G.9803 TELECOMMUNICATION STANDARDIZATION
        SECTOR ......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 1 (08/2019)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14023-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9803-201908-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14023-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9803-201908-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/14023-en","Date":"November,
        2019","Url":null,"Name":"ITU-T G.9803 (2018) Amd. 1 (08/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12540-en","Title":"ITU-T
        G.9802 (2015) Amd. 1 (08/2015)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12540-en\u0026position=5\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2016"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.9802 TELECOMMUNICATION STANDARDIZATION
        SECTOR ......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 1 (08/2015)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12540-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9802-201508-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12540-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9802-201508-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/12540-en","Date":"March,
        2016","Url":null,"Name":"ITU-T G.9802 (2015) Amd. 1 (08/2015)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13119-en","Title":"ITU-T
        G.989.3 (2015) Amd.1 (11/2016)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13119-en\u0026position=4\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"April, 2017"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.989.3 TELECOMMUNICATION STANDARDIZATION
        SECTOR......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 1 (11/2016)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13119-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201611-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13119-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201611-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/13119-en","Date":"April,
        2017","Url":null,"Name":"ITU-T G.989.3 (2015) Amd.1 (11/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13744-en","Title":"ITU-T
        G.988 (2017) Amd. 1 (11/2018)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13744-en\u0026position=3\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"February, 2019"}],"ExtractFileContent":"...  T e l e c o m
        m u n i c a t i o n  U n i o n    ITU-T  G.988 TELECOMMUNICATION STANDARDIZATION
        SECTOR O......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 1 (11/2018)  SERIES
        G: TRANSMISSION SYSTEMS AND MED...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13744-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.988-201811-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13744-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.988-201811-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/13744-en","Date":"February,
        2019","Url":null,"Name":"ITU-T G.988 (2017) Amd. 1 (11/2018)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13293-en","Title":"ITU-T
        G.9807.1 (2016) Amd. 1 (10/2017)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13293-en\u0026position=2\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"December, 2017"}],"ExtractFileContent":"...  T e l e c o m
        m u n i c a t i o n  U n i o n    ITU-T  G.9807.1 TELECOMMUNICATION STANDARDIZATION
        SECTO......m m u n i c a t i o n  U n i o n    ITU-T  G.9807.1 TELECOMMUNICATION
        STANDARDIZATION SECTOR OF ITU A...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13293-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9807.1-201710-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13293-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9807.1-201710-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/13293-en","Date":"December,
        2017","Url":null,"Name":"ITU-T G.9807.1 (2016) Amd. 1 (10/2017)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13746-en","Title":"ITU-T
        G.989.3 (2015) Amd. 2 (11/2018)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13746-en\u0026position=1\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2019"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.989.3 TELECOMMUNICATION STANDARDIZATION
        SECTOR......CATION STANDARDIZATION SECTOR OF ITU Amendment 2 (11/2018)     SERIES
        G: TRANSMISSION SYSTEMS AND MED...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13746-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201811-I!Amd2!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13746-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201811-I!Amd2!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"1":true},"Media":{"Identifier":"11.1002/1000/13746-en","Date":"March,
        2019","Url":null,"Name":"ITU-T G.989.3 (2015) Amd. 2 (11/2018)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"}],"input":"ITU-T
        G.989.2/Amd 1","totalAmount":17,"collationQuery":"","attempt":0,"languageUpdated":false,"allowed":true}'
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:42 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/14492-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Mon, 01 Feb 2021 13:19:42 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/14492-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/14492-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:42 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/14492-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Mon, 01 Feb 2021 13:19:43 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/14492-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:43 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/14492-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Mon, 01 Feb 2021 13:19:43 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14492&lang=en
      Expires:
      - Tue, 02 Feb 2021 13:19:43 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14492&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14492&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:43 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14492
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Mon, 01 Feb 2021 13:19:43 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14492&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=14492&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:43 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=14492
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Mon, 01 Feb 2021 13:19:46 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:46 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/g/T-REC-G.989.2-202010-I!Amd1!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Mon, 01 Feb 2021 13:19:46 GMT
      Content-Type:
      - text/html
      Etag:
      - '"8029c495ebe7d61:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 11 Jan 2021 07:30:07 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<meta name=Generator content=\"Microsoft Word 15
        (filtered)\">\r\n<title>Summary - ITU-T Rec. G.989.2 Amendment&nbsp;1 (10/2020)\r\n40-Gigabit-capable
        passive optical networks 2 (NG-PON2): Physical media\r\ndependent (PMD) layer
        specification Amendment 1 </title>\r\n<style>\r\n<!--\r\n /* Font Definitions
        */\r\n @font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2 4 5
        3 5 4 6 3 2 4;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal,
        div.MsoNormal\r\n\t{margin-top:6.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nh1\r\n\t{mso-style-link:\"Heading 1 Char\";\r\n\tmargin-top:12.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:16.0pt;\r\n\tfont-family:\"Calibri
        Light\",sans-serif;\r\n\tcolor:#2F5496;\r\n\tfont-weight:normal;}\r\nh3\r\n\t{mso-style-link:\"Heading
        3 Char\";\r\n\tmargin-top:8.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:39.7pt;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-indent:-39.7pt;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\np.MsoHeader, li.MsoHeader, div.MsoHeader\r\n\t{mso-style-link:\"Header
        Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:center;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:9.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nspan.Heading3Char\r\n\t{mso-style-name:\"Heading 3
        Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Times New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.HeaderChar\r\n\t{mso-style-name:\"Header
        Char\";\r\n\tmso-style-link:Header;\r\n\tfont-family:\"Times New Roman\",serif;}\r\np.FooterQP,
        li.FooterQP, div.FooterQP\r\n\t{mso-style-name:Footer_QP;\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading
        1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Calibri Light\",sans-serif;\r\n\tcolor:#2F5496;}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",sans-serif;}\r\n.MsoPapDefault\r\n\t{margin-bottom:8.0pt;\r\n\tline-height:107%;}\r\n@page
        WordSection1\r\n\t{size:21.0cm 841.7pt;\r\n\tmargin:54.45pt 54.45pt 54.45pt
        54.45pt;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n<body
        lang=EN-GB>\r\n\r\n<div class=WordSection1>\r\n\r\n<table class=MsoNormalTable
        border=0 cellspacing=0 cellpadding=0 width=\"102%\"\r\n style='border-collapse:collapse'>\r\n
        <tr>\r\n  <td width=\"100%\" valign=top style='width:100.0%;padding:0cm 5.4pt
        0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a name=isume>Summary</a></h3>\r\n
        \ <p class=MsoNormal><span style='font-size:11.0pt'>Recommendation ITU-T\r\n
        \ G.989.2 specifies the physical media dependent (PMD) layer requirements
        for a\r\n  passive optical network (PON) system with</span><span style='font-size:11.0pt'>\r\n
        \ a nominal aggregate capacity of 40 Gbit/s in the downstream direction and
        10\r\n  Gbit/s in the upstream direction, hereinafter referred to as NG-PON2</span><span\r\n
        \ style='font-size:11.0pt'>. NG-PON2 is a flexible optical fibre access network\r\n
        \ capable of supporting the bandwidth requirements of mobile backhaul, business\r\n
        \ and residential services. </span><span style='font-size:11.0pt'>Furthermore,\r\n
        \ this Recommendation describes optional configurations, to extend beyond
        this\r\n  nominal capacity, as the ITU-T G.989 series of Recommendations allows
        for\r\n  multiple upstream and downstream line rates.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>The NG-PON2 wavelength plan\r\n  is defined to enable
        the coexistence through wavelength overlay with legacy\r\n  PON systems (see
        ITU-T G.989.1). The transmission convergence (TC) layer is\r\n  based on Recommendation
        ITU-T G.987.3, with unique modifications for NG-PON2\r\n  captured in Recommendation
        ITU-T G.989.3. The optical network unit (ONU)\r\n  management and control
        interface (OMCI) specifications are described in\r\n  Recommendation ITU-T
        G.988 for NG&#8209;PON2 extensions.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>This Recommendation\r\n  specifies the characteristics
        of hybrid time and wavelength division\r\n  multiplexing (TWDM) channels,
        referred to as TWDM PON. The characteristics of\r\n  optional, tunable point-to-point
        wavelength overlay channels are also\r\n  described, referred to as point-to-point
        wavelength division multiplexing\r\n  (PtP WDM) PON.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>The TWDM PON described in\r\n  this Recommendation
        represents a further development from the systems\r\n  described in the ITU-T
        G.984 and ITU-T G.987 series of Recommendations. To\r\n  the greatest extent
        possible, this Recommendation retains the requirements of\r\n  ITU-T G.984.1
        and ITU-T G.987.1 to ensure maximal reuse of existing\r\n  technology and
        compatibility with deployed optical access systems and optical\r\n  fibre
        infrastructure.</span></p>\r\n  <p class=MsoNormal><span style='font-size:11.0pt'>Edition
        2.0 continues the\r\n  maintenance and evolution of physical media dependent
        (PMD) layer\r\n  specification.</span></p>\r\n  <p class=MsoNormal><span style='font-size:11.0pt'>Corrigendum
        1 revises Table\r\n  10-1 on TWDM PON downstream (ONU receive) X/S parameters.</span></p>\r\n
        \ <p class=MsoNormal><span style='font-size:11.0pt'>Amendment 1 updates Annex
        D\r\n  on power spectral density (PSD) values, to reflect the more recent
        changes in\r\n  the PMD spec.</span></p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p
        class=MsoNormal>&nbsp;</p>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:47 GMT
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/Search
    body:
      encoding: UTF-8
      string: '{"json":"{\"Input\":\"ITU-T G.989.2/Amd 2\",\"Start\":0,\"Rows\":10,\"SortBy\":\"RELEVANCE\",\"ExactPhrase\":false,\"CollectionName\":\"General\",\"CollectionGroup\":\"Recommendations\",\"Sector\":\"t\",\"Criterias\":[{\"Name\":\"Search
        in\",\"Criterias\":[{\"Selected\":false,\"Value\":\"\",\"Label\":\"Name\",\"Target\":\"\\\\/name_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"Short
        description\",\"Target\":\"\\\\/short_description_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"File
        content\",\"Target\":\"\\\\/file\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0}],\"ShowCheckbox\":true,\"Selected\":false}],\"Topics\":\"\",\"ClientData\":{},\"Language\":\"en\",\"SearchType\":\"All\"}"}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '18014'
      Date:
      - Mon, 01 Feb 2021 13:19:48 GMT
      Content-Type:
      - application/json; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Set-Cookie:
      - GSCookie=QueryId=&CookieId=R9vUoKmOdGdAJW0R00goYfM/PwakI1AhDvIxONw888KCKFZy+wd6mhmYLp2i6GPxk2byM9lhxDo83R3GUp3snA==;
        domain=www.itu.int; expires=Wed, 01-Feb-2023 13:19:47 GMT; path=/
      - GSCookie=QueryId=3639700&CookieId=R9vUoKmOdGdAJW0R00goYfM/PwakI1AhDvIxONw888KCKFZy+wd6mhmYLp2i6GPxk2byM9lhxDo83R3GUp3snA==;
        domain=www.itu.int; expires=Wed, 01-Feb-2023 13:19:48 GMT; path=/
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: '{"results":[{"Identifier":"11.1002/1000/14492-en","Title":"ITU-T G.989.2
        (2019) Amd. 1 (10/2020): 40-Gigabit-capable passive optical networks 2 (NG-PON2):
        Physical media dependent (PMD) layer specification - Amendment 1","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14492-en\u0026position=10\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"January, 2021"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR...... m m u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION
        STANDARDIZATION SECTOR OF ITU A...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14492-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-202010-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14492-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-202010-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/14492-en","Date":"January,
        2021","Url":null,"Name":"ITU-T G.989.2 (2019) Amd. 1 (10/2020)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13292-en","Title":"ITU-T
        G.989.2 (2014) Amd. 2 (08/2017)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13292-en\u0026position=9\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"October, 2017"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR...... m m u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION
        STANDARDIZATION SECTOR OF ITU A...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13292-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201708-S!Amd2!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13292-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201708-S!Amd2!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/13292-en","Date":"October,
        2017","Url":null,"Name":"ITU-T G.989.2 (2014) Amd. 2 (08/2017)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12556-en","Title":"ITU-T
        G.989.2 (2014) Amd. 1 (04/2016)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12556-en\u0026position=8\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"October, 2016"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR...... m m u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION
        STANDARDIZATION SECTOR OF ITU A...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12556-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201604-S!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12556-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201604-S!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/12556-en","Date":"October,
        2016","Url":null,"Name":"ITU-T G.989.2 (2014) Amd. 1 (04/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13745-en","Title":"ITU-T
        G.989.2 (02/2019): 40-Gigabit-capable passive optical networks 2 (NG-PON2):
        Physical media dependent (PMD) layer specification","Collection":{"Name":"ITU-T
        Recommendations","Title":"ITU-T Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en\u0026position=7\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2019"}],"ExtractFileContent":"...  T e l e c o m m u n
        i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION STANDARDIZATION
        SECTOR...... m m u n i c a t i o n  U n i o n    ITU-T  G.989.2 TELECOMMUNICATION
        STANDARDIZATION SECTOR OF ITU (...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201902-I!!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201902-I!!MSW-E\u0026type=items","Icon":"doc-icon.png"},{"Id":"3","Type":"epu","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13745-en%3Flocatt%3Did%3A3%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.2-201902-I!!EPB-E\u0026type=items","Icon":"epub-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/13745-en","Date":"May,
        2019","Url":null,"Name":"ITU-T G.989.2 (02/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13746-en","Title":"ITU-T
        G.989.3 (2015) Amd. 2 (11/2018)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13746-en\u0026position=6\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2019"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.989.3 TELECOMMUNICATION STANDARDIZATION
        SECTOR......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 2 (11/2018)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13746-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201811-I!Amd2!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13746-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201811-I!Amd2!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/13746-en","Date":"March,
        2019","Url":null,"Name":"ITU-T G.989.3 (2015) Amd. 2 (11/2018)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14001-en","Title":"ITU-T
        G.988 (2017) Amd. 2 (08/2019)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14001-en\u0026position=5\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"October, 2019"}],"ExtractFileContent":"...  T e l e c o m m
        u n i c a t i o n  U n i o n    ITU-T  G.988 TELECOMMUNICATION STANDARDIZATION
        SECTOR O......UNICATION STANDARDIZATION SECTOR OF ITU Amendment 2 (08/2019)     SERIES
        G: TRANSMISSION SYSTEMS AND ...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14001-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.988-201908-I!Amd2!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14001-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.988-201908-I!Amd2!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/14001-en","Date":"October,
        2019","Url":null,"Name":"ITU-T G.988 (2017) Amd. 2 (08/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14023-en","Title":"ITU-T
        G.9803 (2018) Amd. 1 (08/2019)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14023-en\u0026position=4\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"November, 2019"}],"ExtractFileContent":"...  T e l e c o m
        m u n i c a t i o n  U n i o n    ITU-T  G.9803 TELECOMMUNICATION STANDARDIZATION
        SECTOR ......ION STANDARDIZATION SECTOR OF ITU Amendment 1 (08/2019)     SERIES
        G: TRANSMISSION SYSTEMS AND MEDIA,...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14023-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9803-201908-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14023-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9803-201908-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/14023-en","Date":"November,
        2019","Url":null,"Name":"ITU-T G.9803 (2018) Amd. 1 (08/2019)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/12540-en","Title":"ITU-T
        G.9802 (2015) Amd. 1 (08/2015)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12540-en\u0026position=3\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"March, 2016"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.9802 TELECOMMUNICATION STANDARDIZATION
        SECTOR ......o m m u n i c a t i o n  U n i o n    ITU-T  G.9802 TELECOMMUNICATION
        STANDARDIZATION SECTOR OF ITU A...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12540-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9802-201508-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F12540-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.9802-201508-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/12540-en","Date":"March,
        2016","Url":null,"Name":"ITU-T G.9802 (2015) Amd. 1 (08/2015)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/14192-en","Title":"ITU-T
        G.988 (2017) Amd. 3 (03/2020)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14192-en\u0026position=2\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"May, 2020"}],"ExtractFileContent":"...  T e l e c o m m u n
        i c a t i o n  U n i o n    ITU-T  G.988 TELECOMMUNICATION STANDARDIZATION
        SECTOR O......ION STANDARDIZATION SECTOR OF ITU Amendment 3 (03/2020)     SERIES
        G: TRANSMISSION SYSTEMS AND MEDIA,...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14192-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.988-202003-I!Amd3!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F14192-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.988-202003-I!Amd3!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/14192-en","Date":"May,
        2020","Url":null,"Name":"ITU-T G.988 (2017) Amd. 3 (03/2020)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"},{"Identifier":"11.1002/1000/13119-en","Title":"ITU-T
        G.989.3 (2015) Amd.1 (11/2016)","Collection":{"Name":"ITU-T Recommendations","Title":"ITU-T
        Recommendations","Description":"","Sector":"ITU-T","Group":"Recommendations"},"Redirection":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13119-en\u0026position=1\u0026page=1","Language":"en","Dir":"ltr","Properties":[{"Title":"Publication
        date","Value":"April, 2017"}],"ExtractFileContent":"...  T e l e c o m m u
        n i c a t i o n  U n i o n    ITU-T  G.989.3 TELECOMMUNICATION STANDARDIZATION
        SECTOR......ION STANDARDIZATION SECTOR OF ITU Amendment 1 (11/2016)     SERIES
        G: TRANSMISSION SYSTEMS AND MEDIA,...","Locations":[{"Id":"1","Type":"pdf","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13119-en%3Flocatt%3Did%3A1%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201611-I!Amd1!PDF-E\u0026type=items","Icon":"pdf-icon.png"},{"Id":"2","Type":"doc","Href":"https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http%3A%2F%2Fhandle.itu.int%2F11.1002%2F1000%2F13119-en%3Flocatt%3Did%3A2%26auth","RawHref":"http://www.itu.int/rec/dologin_pub.asp?lang=e\u0026id=T-REC-G.989.3-201611-I!Amd1!MSW-E\u0026type=items","Icon":"doc-icon.png"}],"TopResult":false,"Words":{"ITU-T":true,"G.989.2/Amd":true,"2":true},"Media":{"Identifier":"11.1002/1000/13119-en","Date":"April,
        2017","Url":null,"Name":"ITU-T G.989.3 (2015) Amd.1 (11/2016)","ParentHandleID":"","ParentName":null,"Type":null,"ContentText":null,"ImageUrl":null,"Tags":[]},"WordsMissing":false,"CollectionTypeCSSClass":"label-t-sector","LanguageCSSClass":"label-en"}],"input":"ITU-T
        G.989.2/Amd 2","totalAmount":16,"collationQuery":"","attempt":0,"languageUpdated":false,"allowed":true}'
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:49 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/13292-en&page=1&position=9
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Mon, 01 Feb 2021 13:19:49 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/13292-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/13292-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:49 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/13292-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Mon, 01 Feb 2021 13:19:49 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://handle.itu.int/11.1002/1000/13292-en
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body>\r\n<center><h1>301
        Moved Permanently</h1></center>\r\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\r\n</body>\r\n</html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:49 GMT
- request:
    method: get
    uri: https://handle.itu.int/11.1002/1000/13292-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Mon, 01 Feb 2021 13:19:50 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13292&lang=en
      Expires:
      - Tue, 02 Feb 2021 13:19:50 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13292&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13292&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:49 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13292
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={49DF433B-89D8-4F68-8697-C825946CF36B};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Mon, 01 Feb 2021 13:19:50 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13292&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13292&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:50 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13292
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Mon, 01 Feb 2021 13:19:53 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:53 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/g/T-REC-G.989.2-202010-I!Amd1!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Mon, 01 Feb 2021 13:19:54 GMT
      Content-Type:
      - text/html
      Etag:
      - '"8029c495ebe7d61:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Mon, 11 Jan 2021 07:30:07 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: UTF-8
      string: "<html>\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html;
        charset=windows-1252\">\r\n<meta name=Generator content=\"Microsoft Word 15
        (filtered)\">\r\n<title>Summary - ITU-T Rec. G.989.2 Amendment&nbsp;1 (10/2020)\r\n40-Gigabit-capable
        passive optical networks 2 (NG-PON2): Physical media\r\ndependent (PMD) layer
        specification Amendment 1 </title>\r\n<style>\r\n<!--\r\n /* Font Definitions
        */\r\n @font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2 4 5
        3 5 4 6 3 2 4;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal,
        div.MsoNormal\r\n\t{margin-top:6.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nh1\r\n\t{mso-style-link:\"Heading 1 Char\";\r\n\tmargin-top:12.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:justify;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:16.0pt;\r\n\tfont-family:\"Calibri
        Light\",sans-serif;\r\n\tcolor:#2F5496;\r\n\tfont-weight:normal;}\r\nh3\r\n\t{mso-style-link:\"Heading
        3 Char\";\r\n\tmargin-top:8.0pt;\r\n\tmargin-right:0cm;\r\n\tmargin-bottom:0cm;\r\n\tmargin-left:39.7pt;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-indent:-39.7pt;\r\n\tpage-break-after:avoid;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\np.MsoHeader, li.MsoHeader, div.MsoHeader\r\n\t{mso-style-link:\"Header
        Char\";\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\ttext-align:center;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:9.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;}\r\nspan.Heading3Char\r\n\t{mso-style-name:\"Heading 3
        Char\";\r\n\tmso-style-link:\"Heading 3\";\r\n\tfont-family:\"Times New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.HeaderChar\r\n\t{mso-style-name:\"Header
        Char\";\r\n\tmso-style-link:Header;\r\n\tfont-family:\"Times New Roman\",serif;}\r\np.FooterQP,
        li.FooterQP, div.FooterQP\r\n\t{mso-style-name:Footer_QP;\r\n\tmargin:0cm;\r\n\tmargin-bottom:.0001pt;\r\n\tpunctuation-wrap:simple;\r\n\ttext-autospace:none;\r\n\tfont-size:11.0pt;\r\n\tfont-family:\"Times
        New Roman\",serif;\r\n\tfont-weight:bold;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading
        1 Char\";\r\n\tmso-style-link:\"Heading 1\";\r\n\tfont-family:\"Calibri Light\",sans-serif;\r\n\tcolor:#2F5496;}\r\n.MsoChpDefault\r\n\t{font-family:\"Calibri\",sans-serif;}\r\n.MsoPapDefault\r\n\t{margin-bottom:8.0pt;\r\n\tline-height:107%;}\r\n@page
        WordSection1\r\n\t{size:21.0cm 841.7pt;\r\n\tmargin:54.45pt 54.45pt 54.45pt
        54.45pt;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n<body
        lang=EN-GB>\r\n\r\n<div class=WordSection1>\r\n\r\n<table class=MsoNormalTable
        border=0 cellspacing=0 cellpadding=0 width=\"102%\"\r\n style='border-collapse:collapse'>\r\n
        <tr>\r\n  <td width=\"100%\" valign=top style='width:100.0%;padding:0cm 5.4pt
        0cm 5.4pt'>\r\n  <h3 style='margin-left:0cm;text-indent:0cm'><a name=isume>Summary</a></h3>\r\n
        \ <p class=MsoNormal><span style='font-size:11.0pt'>Recommendation ITU-T\r\n
        \ G.989.2 specifies the physical media dependent (PMD) layer requirements
        for a\r\n  passive optical network (PON) system with</span><span style='font-size:11.0pt'>\r\n
        \ a nominal aggregate capacity of 40 Gbit/s in the downstream direction and
        10\r\n  Gbit/s in the upstream direction, hereinafter referred to as NG-PON2</span><span\r\n
        \ style='font-size:11.0pt'>. NG-PON2 is a flexible optical fibre access network\r\n
        \ capable of supporting the bandwidth requirements of mobile backhaul, business\r\n
        \ and residential services. </span><span style='font-size:11.0pt'>Furthermore,\r\n
        \ this Recommendation describes optional configurations, to extend beyond
        this\r\n  nominal capacity, as the ITU-T G.989 series of Recommendations allows
        for\r\n  multiple upstream and downstream line rates.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>The NG-PON2 wavelength plan\r\n  is defined to enable
        the coexistence through wavelength overlay with legacy\r\n  PON systems (see
        ITU-T G.989.1). The transmission convergence (TC) layer is\r\n  based on Recommendation
        ITU-T G.987.3, with unique modifications for NG-PON2\r\n  captured in Recommendation
        ITU-T G.989.3. The optical network unit (ONU)\r\n  management and control
        interface (OMCI) specifications are described in\r\n  Recommendation ITU-T
        G.988 for NG&#8209;PON2 extensions.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>This Recommendation\r\n  specifies the characteristics
        of hybrid time and wavelength division\r\n  multiplexing (TWDM) channels,
        referred to as TWDM PON. The characteristics of\r\n  optional, tunable point-to-point
        wavelength overlay channels are also\r\n  described, referred to as point-to-point
        wavelength division multiplexing\r\n  (PtP WDM) PON.</span></p>\r\n  <p class=MsoNormal><span
        style='font-size:11.0pt'>The TWDM PON described in\r\n  this Recommendation
        represents a further development from the systems\r\n  described in the ITU-T
        G.984 and ITU-T G.987 series of Recommendations. To\r\n  the greatest extent
        possible, this Recommendation retains the requirements of\r\n  ITU-T G.984.1
        and ITU-T G.987.1 to ensure maximal reuse of existing\r\n  technology and
        compatibility with deployed optical access systems and optical\r\n  fibre
        infrastructure.</span></p>\r\n  <p class=MsoNormal><span style='font-size:11.0pt'>Edition
        2.0 continues the\r\n  maintenance and evolution of physical media dependent
        (PMD) layer\r\n  specification.</span></p>\r\n  <p class=MsoNormal><span style='font-size:11.0pt'>Corrigendum
        1 revises Table\r\n  10-1 on TWDM PON downstream (ONU receive) X/S parameters.</span></p>\r\n
        \ <p class=MsoNormal><span style='font-size:11.0pt'>Amendment 1 updates Annex
        D\r\n  on power spectral density (PSD) values, to reflect the more recent
        changes in\r\n  the PMD spec.</span></p>\r\n  </td>\r\n </tr>\r\n</table>\r\n\r\n<p
        class=MsoNormal>&nbsp;</p>\r\n\r\n<p class=MsoNormal>&nbsp;</p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n"
    http_version:
  recorded_at: Mon, 01 Feb 2021 13:19:54 GMT
recorded_with: VCR 5.1.0
